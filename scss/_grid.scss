// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

@if $enable-grid-classes {
  .container {
    @include make-container();
    @include make-container-max-widths();
  }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but with 100% width for
// fluid, full width layouts.

@if $enable-grid-classes {
  .container-fluid {
    @include make-container();
  }
}

// Row
//
// Rows contain and clear the floats of your columns.

@if $enable-grid-classes {
  .grid,
  .row {
    @include make-row();

    > * {
      @include make-col-ready();
    }
  }

  .grid {
    margin-bottom: -$grid-gutter-width;

    > * {
      margin-bottom: $grid-gutter-width;
    }
  }

  // Remove the negative margin from default .row, then the horizontal padding
  // from all immediate children columns (to prevent runaway style inheritance).
  .grid-0,
  .row-0 {
    margin-right: 0;
    margin-left: 0;

    > * {
      padding-right: 0;
      padding-left: 0;
    }
  }

  .grid-0 {
    margin-bottom: 0;

    > * {
      margin-bottom: 0;
    }
  }

  .grid-sm,
  .row-sm {
    margin-right: -$grid-gutter-width-sm / 2;
    margin-left: -$grid-gutter-width-sm / 2;

    > * {
      padding-right: $grid-gutter-width-sm / 2;
      padding-left: $grid-gutter-width-sm / 2;
    }
  }

  .grid-sm {
    margin-bottom: -$grid-gutter-width-sm;

    > * {
      margin-bottom: $grid-gutter-width-sm;
    }
  }

  .grid-lg,
  .row-lg {
    margin-right: -$grid-gutter-width-lg / 2;
    margin-left: -$grid-gutter-width-lg / 2;

    > * {
      padding-right: $grid-gutter-width-lg / 2;
      padding-left: $grid-gutter-width-lg / 2;
    }
  }

  .grid-lg {
    margin-bottom: -$grid-gutter-width-lg;

    > * {
      margin-bottom: $grid-gutter-width-lg;
    }
  }
}

// Columns
//
// Common styles for small and large grid columns

@if $enable-grid-classes {
  @include make-grid-columns();
}
